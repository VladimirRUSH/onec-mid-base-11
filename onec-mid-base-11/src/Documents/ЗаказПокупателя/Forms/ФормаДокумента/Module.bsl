
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
//	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
//	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;

	// Ярушин Нач
	// ТекущиеДанные по отдельным ТЧ делаю потому что при копировании нет позиционирования на строке и просто ТекущиеДанные не срабатывают
	СтрТовары = Элементы.Товары.ТекущиеДанные;
	СтрУслуги = Элементы.Услуги.ТекущиеДанные;
	// Скидка по ТЧ Товары	
	Для Каждого СтрТовары Из Объект.Товары Цикл
		// Проверка на превышение 100%	
		ОбщаяСкидкаТовары = ((СтрТовары.Скидка + Объект.Ярушин_СогласованнаяСкидка) / 100);
		Если ОбщаяСкидкаТовары > 1 Тогда
			СтрТовары.Сумма = 0;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Скидка по товару %1 превышает 100 процентов", СтрТовары.Номенклатура);
			Сообщение.Сообщить();
		Иначе
			//Применение скидки	
			Скидка = СтрТовары.Цена * СтрТовары.Количество * ОбщаяСкидкаТовары;
			СтрТовары.Сумма = СтрТовары.Цена * СтрТовары.Количество - Скидка;
		КонецЕсли;
	КонецЦикла;
	
	// Скидка по ТЧ Услуги	
	Для Каждого СтрУслуги Из Объект.Услуги Цикл
		// Проверка на превышение 100%	
		ОбщаяСкидкаУслуги = ((Объект.Ярушин_СогласованнаяСкидка + СтрУслуги.Скидка) / 100);
		Если ОбщаяСкидкаУслуги > 1 Тогда
			СтрУслуги.Сумма = 0;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Скидка по услуге %1 превышает 100 процентов", СтрУслуги.Номенклатура);
			Сообщение.Сообщить();
		Иначе
			//Применение скидки	
			Скидка = СтрУслуги.Цена * СтрУслуги.Количество * ОбщаяСкидкаУслуги;
			СтрУслуги.Сумма = СтрУслуги.Цена * СтрУслуги.Количество - Скидка;
		КонецЕсли;
	КонецЦикла; 
	
	// Ярушин Кон

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

// Ярушин Нач
// Применение Согласованной скидки
// Вопрос пользователю при изменении поля скидки
&НаКлиенте
Процедура Ярушин_СогласованнаяСкидкаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Товары) Или ЗначениеЗаполнено(Объект.Услуги)Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",ЭтотОбъект,Параметры);
		ПоказатьВопрос(Оповещение,"Применить скидку в документе?",РежимДиалогаВопрос.ДаНетОтмена,0,КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат,ТекущиеДанные)Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте      
// Скидка по кнопке
Процедура ПрименитьСкидку(Команда,ТекущиеДанные)
	РассчитатьСуммуСтроки(ТекущиеДанные);
КонецПроцедуры
// Ярушин Кон


#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

